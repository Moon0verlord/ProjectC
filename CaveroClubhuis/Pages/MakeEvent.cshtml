@page
@model CaveroClubhuis.Pages.MakeEventModel
@{
    ViewData["Title"] = "Admin";
}
<head>
    <link rel="stylesheet" href="~/css/Admin.css" asp-append-version="true" />
</head>


<body>
    <div class="main-body">
        <div class="admin-bar">
            <!-- Buttons for the admin-->
            <a href="/Admin">
                <button id="makeButton" class="admin-button" style="background-color: #803689; color: white;">
                    Event aanmaken
                </button>
            </a>
            <a href="/AdminChange">
                <button id="changeButton" class="admin-button">
                    Event aanpassen
                </button>
            </a>
            <a href="/AdminDelete">
                <button id="removeButton" class="admin-button">
                    Event verwijderen
                </button>
            </a>
            <a href="/AdminMakeTeam">
                <button id="TeamButton" class="admin-button">Team aanmaken</button>
            </a>
            <a href="/AdminRemoveTeam">
                <button id="TeamButton" class="admin-button">Team verwijderen</button>
            </a>
        </div>

        <div class="make-event">
            <div class="form-dialog-header">
                <header>
                    <div class="maketeam">Evenement aanmaken</div>
                </header>

                <div class="line"></div>
            </div>
            <form id="make" method="post" class="make-event-form" asp-page-handler="MakeEvent">
                <!-- Add the make event inputs here-->
                <label for="title">Titel</label>
                <span asp-validation-for="title" class="error-message"></span>
                <input type="text" id="title" placeholder="titel" maxlength="20" asp-for="title">

                <label for="description">Omschrijving</label>
                <span asp-validation-for="description" class="error-message"></span>
                <textarea type="text" id="description" placeholder="omschrijving" maxlength="200" asp-for="description"></textarea>

                <label for="date">Datum</label>
                <span asp-validation-for="date" class="error-message"></span>
                <input type="date" id="date" asp-for="date" oninput="changeTimes('startTime', false); changeTimes('endTime', false)" value="">


                <label for="startTime">Start tijd</label>
                <span asp-validation-for="startTime" class="error-message"></span>
                <select id="startTime" asp-for="startTime" oninput="changeTimes('endTime', true)">
                    <option value="@Model.startTime">Selecteer een datum</option>
                </select>

                <label for="endTime">Eind tijd</label>
                <span asp-validation-for="endTime" class="error-message"></span>
                <select id="endTime" asp-for="endTime">
                    <option value="@Model.endTime">Selecteer een datum</option>
                </select>

                <label for="location">Locatie</label>
                <span asp-validation-for="location" class="error-message"></span>
                <input type="text" id="location" placeholder="locatie" asp-for="location">

                <div class="explain">Vul de velden in om een evenement te maken</div>
                <input type="submit" value="Opslaan">
            </form>
        </div></div>
</body>


<script>
    function changeTimes(elementId, YTime) {

        var selectElement = document.getElementById(elementId);
        selectElement.innerHTML = '';

        submitForm(YTime ,function (responseText) {
            var dataArray = JSON.parse(responseText);

            //add the first option to the select
            var option = document.createElement('option');
            option.value = "@Model.endTime";
            option.text = "Selecteer een optie";
            selectElement.appendChild(option);

            //add the other times to the select
            dataArray.forEach(function (item) {
                option = document.createElement('option');
                option.value = item; // Set the value of the option to the item
                option.textContent = item; // Set the text content of the option to the item
                selectElement.appendChild(option);
            });
        });
    }

    function submitForm(Ytime, callback) {
        var dateValue = document.getElementById('date').value;
        var timeValue = timeValue = document.getElementById('startTime').value;


            // Use AJAX to send the data to the Razor Page handler
            var xhr = new XMLHttpRequest();
        xhr.open('GET', '/MakeEvent?handler=ProcessInput&date=' + dateValue + '&time=' + timeValue, true);

            xhr.onload = function () {
                if (xhr.status >= 200 && xhr.status < 400) {
                    // Handle the response if needed
                    callback(xhr.responseText);
                } else {
                    // Handle errors
                    console.error(xhr.statusText);
                }
            };

            xhr.send();
        }
</script>

<style>
    .form-dialog-header {
        display: flex;
        flex-direction: column; /* Assuming .make-event is a flex container */
        align-items: center; /* Center items horizontally */
    }

    .line {
        height: 1px;
        width: 370px; /* Set the width to 300px */
        border-bottom: 1px solid rgba(177, 179, 180, 0.2);
        ;
    }

    .form-dialog-header header {
        padding: 10px;
        font-size: 20px;
        font-weight: normal;
        text-align: center;
    }

    .explain {
        margin-left: 75px;
    }

</style>