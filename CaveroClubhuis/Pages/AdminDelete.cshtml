@page
@model CaveroClubhuis.Pages.AdminDeleteModel
@using Newtonsoft.Json
@{
    var DialogButtons1 = new ButtonModel() { isPrimary = true, cssClass = "confirm-button", content = "Bevestig" };
    var DialogButtons2 = new ButtonModel() { content = "Annuleer", cssClass = "e-flat" };
    var DialogButtons3 = new ButtonModel() { content = "Terug", cssClass = "e-flat" };
ViewData["Title"] = "Admin";
}


<style>
    .confirm-button {
        background-color: #803689 !important;
        border-color: #803689 !important;
        color: white !important;
    }


    .e-dialog {
        text-align: center; /* Horizontal centering */
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100%;
    }


        .e-dialog .e-dlg-header {
            width: 340px;
            font-size: 20px;
            font-weight: normal;
            position: relative;
        }

        .e-dialog .e-dlg-content {
            display: flex;
            flex-direction: column;
            min-height: 200px;
            overflow: auto;
        }

        .e-dialog .e-dlg-content {
            overflow-y: auto;
        }

    .error-message {
        color: red;
    }


    #dialog2 {
        width: 550px !important;
    }

    .e-dropdownbase .e-list-item.e-item-focus, .e-dropdownbase .e-list-item.e-active, .e-dropdownbase .e-list-item.e-active.e-hover, .e-dropdownbase .e-list-item.e-hover {
        background-color: #803689 !important;
        color: white !important;
    }
</style>

<head>
    <link rel="stylesheet" href="~/css/Admin.css" asp-append-version="true" />
    <script src="~/js/Admin_Close.js"></script>
</head>

<div class="admin-bar">
    <!-- Buttons for the admin-->
    <a href="/MakeEvent">
        <button id="makeButton" class="admin-button">
            Event aanmaken
        </button>
    </a>
    <a href="/AdminChange">
        <button id="changeButton" class="admin-button">
            Event aanpassen
        </button>
    </a>
    <a href="/Admin">
        <button id="removeButton" class="admin-button">
            Event verwijderen
        </button>
    </a>
    <a href="/AdminMakeTeam">
        <button id="TeamButton" class="admin-button">Team aanmaken</button>
    </a>

    <a href="/AdminRemoveTeam">
        <button id="TeamButton" class="admin-button">Team verwijderen</button>
    </a>
    <a href="/AdminFeedback">
        <button id="feedbackButton" class="admin-button">Feedback bekijken</button>
    </a>
</div>

<div id='container'>

    <ejs-dialog id="dialog" header="Verwijder evenement" visible="true" target="#container" style="margin-top: 310px; border-radius: 13px; box-shadow: none; border: 2px solid #d9d9d9; overflow-y: auto;" width="450px">
        <e-content-template>

            <form id="delete" method="post" asp-page-handler="Delete">
                <div>
                    <ejs-dropdownlist id="selectedEvent" dataSource="@Model.EventsNames" placeholder="Kies een evenement" allowFiltering="true" filtering="onfiltering" ejs-for="@Model.SelectedEvents" style="width: 300px;">
                        <e-dropdownlist-fields text="Title" value="Id"></e-dropdownlist-fields>
                    </ejs-dropdownlist>
                    <p></p>
                    <p>Selecteer een evenement om te verwijderen</p>
                </div>
                <div><span id="error-message" class="error-message"></span></div>
                <ejs-dialog id="dialog2" header="Bevestig verwijdering evenementen" visible="false" target="#container" showCloseIcon="true" content="Weet je zeker dat je de gekozen evenementen wilt verwijderen?" width="500px">
                    <e-dialog-buttons>
                        <e-dialog-dialogbutton buttonModel="DialogButtons1" click="submitForm" id="submit-button"></e-dialog-dialogbutton>
                        <e-dialog-dialogbutton buttonModel="DialogButtons2" click="showDialog1"></e-dialog-dialogbutton>
                    </e-dialog-buttons>
                </ejs-dialog>

            </form>
        </e-content-template>
        <e-dialog-buttons>
            <e-dialog-dialogbutton buttonModel="DialogButtons1" click="showDialog2"></e-dialog-dialogbutton>
            <e-dialog-dialogbutton buttonModel="DialogButtons3" click="sluitform" id="close-button"></e-dialog-dialogbutton>
        </e-dialog-buttons>
    </ejs-dialog>


</div>


@section Scripts
    {
    <partial name="_ValidationScriptsPartial" />
}

<script>
        window.onload = function () {
            var dialog = document.getElementById("dialog").ej2_instances[0];
            document.getElementById('targetButton').onclick = function () {
                dialog.show();
            };

            window.onresize = function () {
                // make it responsive when the window is resized
                dialog.refreshPosition();
            };
        };

        function showDialog2() {
        var errorMessageElement = document.getElementById("error-message");
        var selectedEvent = document.getElementById('selectedEvent');
            if (selectedEvent.value !== "" ) // check if there is a value or not
            {
            errorMessageElement.innerText = "";
            var dialog = document.getElementById('dialog').ej2_instances[0];
            dialog.hide();  // Hide the first dialog
            var dialog2 = document.getElementById('dialog2').ej2_instances[0];
            dialog2.position = dialog.position;
            dialog2.show(); // Show the second dialog
        } else {
            // Show error message if no event is selected

                errorMessageElement.innerText = "Selecteer één evenement om verder te gaan";
        }
            }

        function submitForm() {
            // manually submit the form when button is pressed
            document.getElementById('delete').submit();
        }

        function showDialog1()
        {
            var dialog2 = document.getElementById('dialog2').ej2_instances[0];
            dialog2.hide();  // Hide the first dialog
            var dialog = document.getElementById('dialog').ej2_instances[0];
            dialog.position = dialog2.position;
            dialog.show(); // Show the second dialog
        }

        // Function to allow filtering with jquery
        function onfiltering(e) {
            var query = new ej.data.Query();
            query = (e.text !== '') ? query.where('Title', 'startswith', e.text, true) : query;
            e.updateData(@Html.Raw(JsonConvert.SerializeObject(Model.EventsNames)), query);
        }


</script>